<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<!-- 访问决策管理器，这里使用AffirmativeBased，并加入一个自定义的投票器DynamicRoleVoter -->
	<beans:bean id="accessDecisionManager"
		class="com.esoft.archer.user.service.impl.MyUnanimousBased">
		<beans:property name="decisionVoters">
			<beans:list>
				<!-- <beans:bean class="org.springframework.security.access.vote.RoleVoter"> -->
				<!-- <beans:property name="rolePrefix" value="" /> -->
				<!-- </beans:bean> -->
				<beans:bean
					class="org.springframework.security.web.access.expression.MyWebExpressionVoter" />
				<beans:ref bean="menuPermissionVoter" />
				<beans:ref bean="urlMappingPermissionVoter" />
				<!-- <beans:bean -->
				<!-- class="org.springframework.security.access.vote.AuthenticatedVoter" 
					/> -->
			</beans:list>
		</beans:property>
		<!-- <beans:property name="allowIfAllAbstainDecisions" value="true"></beans:property> -->
	</beans:bean>

	<beans:bean id="accessDeniedHandler"
		class="com.esoft.archer.user.service.impl.MyAccessDeniedHandler">
		<beans:property name="accessDeniedUrl" value="/site/themes/default/templates/error/403.htm" />
	</beans:bean>

	<http pattern="/javax.faces.resource/**" security="none" />
	<http pattern="/include/**" security="none" />
	<http pattern="/**/*.jpg" security="none" />
	<http pattern="/**/*.png" security="none" />
	<http pattern="/**/*.gif" security="none" />
	<http pattern="/**/*.css" security="none" />
	<http pattern="/**/*.js" security="none" />
	<http pattern="/**/*.ico" security="none" />
	<http pattern="/**/*.htc" security="none" />
	<http pattern="/**/*.swf" security="none" />
	<http pattern="/**/*.TTF" security="none" />
	<http pattern="/**/*.eot" security="none" />
	<http pattern="/**/*.svg" security="none" />
	<http pattern="/**/*.woff" security="none" />

	<http pattern="/toHtml/**" security="none" />
	<http pattern="/ImageUpload/**" security="none" />
	<http pattern="/ScrawlUp/**" security="none" />
	<http pattern="/FileUp/**" security="none" />
	<http pattern="/GetRemoteImage/**" security="none" />
	<http pattern="/ImageManager/**" security="none" />
	<http pattern="/GetMovie/**" security="none" />
	<http pattern="/activateAccount/**" security="none" />
	<http pattern="/verifyCodeServlet/**" security="none" />
	<http pattern="/sina_weibo_auth/**" security="none" />
	<http pattern="/qq_auth_return/**" security="none" />
	<http pattern="/payreturn/**" security="none" />
	<http pattern="/pay/**" security="none" />
	<http pattern="/error/**" security="none" />

	<http entry-point-ref="loginUrlEntryPoint" use-expressions="true"
		access-decision-manager-ref="accessDecisionManager">
		<!-- 是按照顺序加载和过滤么？ 结论：最后一个优先 -->
		<intercept-url pattern="/re_active" access="hasRole('INACTIVE')" />
		<intercept-url pattern="/admin/**"
			access="hasRole('ROLE_ADMIN') and not hasRole('INACTIVE')" />
		<intercept-url pattern="/user/**"
			access="hasRole('USER') and not hasRole('INACTIVE')" />
		<intercept-url pattern="/mobile/user/**"
			access="hasRole('USER') and not hasRole('INACTIVE')" />
		<intercept-url pattern="/site/**" access="denyAll" />
		<intercept-url pattern="/**/*.jsp" access="denyAll" />
		<intercept-url pattern="/spage/**" access="denyAll" />

		<intercept-url pattern="/**" access="MENU_PERMISSION" />
		<intercept-url pattern="/**" access="URL_MAPPING_PERMISSION" />
		<intercept-url pattern="/**" access="not hasRole('INACTIVE')" />
		<session-management
			session-authentication-strategy-ref="sas" />

		<access-denied-handler ref="accessDeniedHandler" />

		<!--remeberMe 过滤器 -->
		<custom-filter ref="rememberMeAuthenticationFilter"
			position="REMEMBER_ME_FILTER" />

		<!-- 登录过滤器 -->
		<custom-filter before="FORM_LOGIN_FILTER" ref="loginFilter" />
		<custom-filter position="FORM_LOGIN_FILTER" ref="adminLoginFilter" />

		<custom-filter position="CONCURRENT_SESSION_FILTER" ref="concurrencyFilter" />

		<!-- 注销过滤器 -->
		<custom-filter before="LOGOUT_FILTER" ref="logoutFilter" />
		<custom-filter position="LOGOUT_FILTER" ref="adminLogoutFilter" />
	</http>
	<authentication-manager alias="authenticationManager">
		<authentication-provider ref="myAuthenticationManager" />
		<authentication-provider ref="rememberMeAuthenticationProvider" />
	</authentication-manager>

	<beans:bean id="sas"
		class="org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy">
		<beans:constructor-arg name="sessionRegistry"
			ref="sessionRegistry" />
		<beans:property name="maximumSessions" value="10" />
	</beans:bean>

	<beans:bean id="concurrencyFilter"
		class="com.esoft.archer.user.service.impl.MyConcurrentSessionFilter">
		<beans:property name="sessionRegistry" ref="sessionRegistry" />
		<!-- <beans:property name="redirectStrategy" ref="jsfRedirectStrategy" 
			/> -->
	</beans:bean>

	<!-- <beans:bean id="jsfRedirectStrategy" class="com.esoft.archer.user.service.impl.JsfRedirectStrategy"/> -->

	<beans:bean id="sessionRegistry"
		class="org.springframework.security.core.session.SessionRegistryImpl" />

	<!-- 认证切入点，这里使用它的目的是保证当用户登录之前就访问前后台时，会跳转到不同的登录页面 -->
	<beans:bean id="loginUrlEntryPoint"
		class="com.esoft.archer.user.service.impl.LoginUrlEntryPoint">
		<beans:property name="dispatcherRules">
			<beans:map>
				<beans:entry key="mobile" value="/memberLoginMobile" />
				<beans:entry key="admin" value="/loginPage" />
				<beans:entry key="user" value="/memberLoginPage"></beans:entry>
			</beans:map>
		</beans:property>
		<beans:property name="defaultTargetUrl" value="/memberLoginPage"></beans:property>
	</beans:bean>
	<!-- 登录过滤器，验证前台用户 -->
	<beans:bean id="loginFilter"
		class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
		<beans:property name="sessionAuthenticationStrategy"
			ref="sas" />
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<beans:property name="rememberMeServices" ref="rememberMeServices"></beans:property>
		<beans:property name="authenticationFailureHandler"
			ref="failureHandler" />
		<beans:property name="authenticationSuccessHandler"
			ref="successHandler" />
		<beans:property name="filterProcessesUrl" value="/memberLogin" />
	</beans:bean>

	<beans:bean id="failureHandler"
		class="com.esoft.archer.user.service.impl.MyUrlAuthenticationFailureHandler">
		<!-- FIXME:登录失败以后的url就变了，如果用户直接访问这个登录失败的url，会提示 Authentication method not 
			supported: GET -->
		<beans:property name="useForward" value="true" />
		<beans:property name="targetUrlParameter" value="loginFailTargetUrl" />
		<beans:property name="defaultFailureUrl" value="/memberLoginPage?error=true" />
	</beans:bean>

	<beans:bean id="successHandler"
		class="com.esoft.archer.user.service.impl.MySavedRequestAwareAuthenticationSuccessHandler">
		<!-- <beans:property name="useReferer" value="true" /> -->
		<!-- <beans:property name="alwaysUseDefaultTargetUrl" value="false" /> -->
		<beans:property name="targetUrlParameter" value="loginSuccessTargetUrl" />
		<beans:property name="defaultTargetUrl" value="/" />
	</beans:bean>

	<!-- 登录过滤器，验证后台用户 -->
	<beans:bean id="adminLoginFilter"
		class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
		<beans:property name="sessionAuthenticationStrategy"
			ref="sas" />
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<beans:property name="rememberMeServices" ref="rememberMeServices"></beans:property>
		<beans:property name="authenticationFailureHandler"
			ref="adminFailureHandler" />
		<beans:property name="authenticationSuccessHandler"
			ref="adminSuccessHandler" />
		<beans:property name="filterProcessesUrl" value="/login" />
	</beans:bean>

	<beans:bean id="adminFailureHandler"
		class="com.esoft.archer.user.service.impl.MyUrlAuthenticationFailureHandler">
		<!-- 为了保留错误信息，例如用户名密码错误之类 -->
		<beans:property name="useForward" value="true" />
		<beans:property name="targetUrlParameter" value="loginFailTargetUrl" />
		<beans:property name="defaultFailureUrl" value="/loginPage?error=true" />
	</beans:bean>

	<beans:bean id="adminSuccessHandler"
		class="com.esoft.archer.user.service.impl.MySavedRequestAwareAuthenticationSuccessHandler">
		<!-- <beans:property name="useReferer" value="true" /> -->
		<!-- <beans:property name="alwaysUseDefaultTargetUrl" value="false" /> -->
		<beans:property name="targetUrlParameter" value="loginSuccessTargetUrl" />
		<beans:property name="defaultTargetUrl" value="/admin/index.htm" />
	</beans:bean>

	<!-- 注销过滤器，完成前台用户注销时的定向功能 -->
	<beans:bean id="logoutFilter"
		class="org.springframework.security.web.authentication.logout.LogoutFilter">
		<beans:constructor-arg ref="logoutSuccessHandler" />
		<beans:constructor-arg>
			<beans:list>
				<beans:bean
					class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" />
				<beans:ref bean="rememberMeServices" />
			</beans:list>
		</beans:constructor-arg>
		<beans:property name="filterProcessesUrl" value="/usermember/logout" />
	</beans:bean>

	<!-- 注销过滤器，完成后台用户注销时的定向功能 -->
	<beans:bean id="adminLogoutFilter"
		class="org.springframework.security.web.authentication.logout.LogoutFilter">
		<beans:constructor-arg ref="logoutSuccessHandler" />
		<beans:constructor-arg>
			<beans:list>
				<beans:bean
					class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" />
				<beans:ref bean="rememberMeServices" />
			</beans:list>
		</beans:constructor-arg>
		<beans:property name="filterProcessesUrl" value="/user/logout" />
	</beans:bean>

	<beans:bean id="logoutSuccessHandler"
		class="org.springframework.security.web.authentication.logout.SimpleUrlLogoutSuccessHandler">
		<beans:property name="targetUrlParameter" value="targetUrl" />
		<beans:property name="defaultTargetUrl" value="/" />
	</beans:bean>

	<!-- Automatically receives AuthenticationEvent messages -->
	<beans:bean id="loggerListener"
		class="org.springframework.security.authentication.event.LoggerListener" />

	<beans:bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<beans:property name="basename"
			value="classpath:org/springframework/security/messages/messages_zh_CN" />
	</beans:bean>

	<beans:bean id="jdbcUserDetailsManager"
		class="com.esoft.archer.user.service.impl.MyJdbcUserDetailsManager">
		<beans:property name="dataSource" ref="dataSource"></beans:property>
		<beans:property name="usersByUsernameQuery"
			value="select username,password,status from user where username=?"></beans:property>
		<beans:property name="authoritiesByUsernameQuery"
			value="select user.username as username,role_permission.permission_id as authority from user left join user_role on user.id=user_role.user_id left join role_permission on user_role.role_id=role_permission.role_id where user.username=?"></beans:property>
	</beans:bean>

	<!-- remember me Configuration start -->
	<!-- 记住密码功能(COOKIE方式) -->
	<beans:bean id="rememberMeAuthenticationFilter"
		class="com.esoft.archer.user.service.impl.MyRememberMeAuthenticationFilter">
		<beans:property name="rememberMeServices" ref="rememberMeServices" />
		<beans:property name="authenticationManager" ref="authenticationManager" />
	</beans:bean>
	<beans:bean id="rememberMeServices"
		class="org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices">
		<beans:property name="userDetailsService" ref="jdbcUserDetailsManager" />
		<beans:property name="key" value="esoft-archer" />
		<beans:property name="alwaysRemember" value="false"></beans:property>
		<beans:property name="tokenValiditySeconds" value="1209600"><!--14天 -->
		</beans:property>
		<beans:property name="parameter" value="_spring_security_remember_me"></beans:property>
	</beans:bean>
	<beans:bean id="rememberMeAuthenticationProvider"
		class="org.springframework.security.authentication.RememberMeAuthenticationProvider">
		<beans:property name="key" value="esoft-archer" />
	</beans:bean>

	<global-method-security pre-post-annotations="enabled" />

</beans:beans>